<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<ui:composition template="/WEB-INF/template.xhtml"
    xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">
    <ui:define name="bodyJR">
    <f:metadata>
        <f:event type="preRenderView" listener="#{beanMenu.changeRutaMenu('catPedidosProductos')}"/>
        <f:event type="preRenderView" listener="#{beanPedidosProductos.llenaLista}"/>
    </f:metadata>
    <h:form id="formTablePedidosProductos">
        <p:growl id="messages" showDetail="true" showSummary="true"/>
        <p:dataTable id="tablaPedidosProductos" var="obj" value="#{beanPedidosProductos.listaModel}"
             paginator="true" rows="10" selectionMode="single"
             lazy="true" rowKey="#{obj.idPedidoProducto}"
             rowsPerPageTemplate="5,10,15,20,25,30,40,50"
             style="width: 100%; font-size: 14px;" widgetVar="widgetTablaPedidosProductos"
             paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}">
            <f:facet name="header">
                #{props['com.jr.props.menu.cat.home']} #{props['com.jr.props.de']} #{props['com.jr.props.menu.cat.pedidos_productos']}
            </f:facet>

            <p:ajax event="page" oncomplete="checkUn();"/>
            <p:ajax event="rowDblselect" listener="#{beanPedidosProductos.showPedidosProductos}" 
                    update=":formShowPedidosProductos:dialogShowPedidosProductos"
                    oncomplete="widgetShowPedidosProductos.show();"/>

            <p:column style="width:2%;">
                <f:facet name="header">
                    <h:selectBooleanCheckbox onclick="selectUnAll(this);" id="chSelectAll"/>
                </f:facet>
                <h:selectBooleanCheckbox value="#{obj.select}"/>
            </p:column>

            <p:column style="width:6%; text-align: center;">
                <f:facet name="header">
                    <p:commandLink onclick="widgetTablaPedidosProductos.unselectAllRows();"
                        actionListener="#{beanPedidosProductos.onUpdateInsertRow(null)}" 
                               update=":formAAShowPedidosProductos:dialogPedidosProductos"
                               title="#{props['com.jr.props.registro.new']}"
                               oncomplete="widgetPedidosProductos.show();">
                        <img src="#{resources}/images/new.gif" border="0" width="30px" height="30px"/>
                    </p:commandLink>
                </f:facet>
                <h:outputText value="#{obj.cont}"/>
            </p:column>
            <p:column>
                <f:facet name="header">
                    <h:outputText value="#{props['com.jr.props.menu.cat.pedidos_productos.id_pedido']}"/>
                </f:facet>
                <h:outputText value="#{obj.pedidos.idPedido}"/>
            </p:column>
            <p:column>
                <f:facet name="header">
                    <h:outputText value="#{props['com.jr.props.menu.cat.pedidos_productos.id_producto']}"/>
                </f:facet>
                <h:outputText value="#{obj.productos.idProducto}"/>
            </p:column>

            <p:column style="width: 2%">
                <a href="#" title="#{props['com.jr.props.registro.delete']}" 
                   onclick="setIdDelete('#{obj.idPedidoProducto}','#{obj.cont}');confirmDeletePedidosProductos.show();
                   widgetTablaPedidosProductos.unselectAllRows(); 
                   widgetTablaPedidosProductos.selectRow(#{obj.posicion});">
                    <img src="#{resources}/images/borrar.png" border="0" width="15px" height="15px"/>
                </a>
            </p:column>
            <p:column style="width: 2%">
                <p:commandLink onclick="widgetTablaPedidosProductos.unselectAllRows(); 
                   widgetTablaPedidosProductos.selectRow(#{obj.posicion});"
                    actionListener="#{beanPedidosProductos.onUpdateInsertRow(obj)}" 
                               update=":formAAShowPedidosProductos:dialogPedidosProductos"
                               title="#{props['com.jr.props.registro.update']}"
                               oncomplete="setIdActualizar(#{obj.cont});widgetPedidosProductos.show();">
                    <img src="#{resources}/images/update.gif" border="0" width="15px" height="15px"/>
                </p:commandLink>
            </p:column>

            <f:facet name="footer">
                <table>
                    <tr>
                        <td align="left">
                    <p:commandButton
                        onclick="return confirmaBorradoAll();"
                                actionListener="#{beanPedidosProductos.deleteAllSelect}"
                                title="#{props['com.jr.props.registro.delete']}s"
                                value="#{props['com.jr.props.registro.delete']}s"
                                icon="ui-icon-close" style="font-size: 12px;"/>
                        </td>
                        <td align="right">
                        <p:commandButton onclick="widgetTablaPedidosProductos.unselectAllRows();"
                                actionListener="#{beanPedidosProductos.onUpdateInsertRow(null)}"
                               update=":formAAShowPedidosProductos:dialogPedidosProductos"
                               title="#{props['com.jr.props.registro.new']}"
                               oncomplete="widgetPedidosProductos.show();"
                               value="#{props['com.jr.props.registro.new']}"
                               icon="ui-icon-newwin" style="font-size: 12px;"/>
                        </td>
                    </tr>
                </table>
            </f:facet>
        </p:dataTable>
    </h:form>
    
    
    <h:form id="formAAShowPedidosProductos">
    <p:dialog id="dialogPedidosProductos" header="#{beanPedidosProductos.tituloPantalla}" widgetVar="widgetPedidosProductos"
              showEffect="explode" hideEffect="fade"
              closable="false">
    <p:panel id="panelPedidosProductos">
    <h:inputHidden id="contadorPedidosProductosActualizar" value="#{beanPedidosProductos.dominio.cont}"/>
    <table>
        <tr><td align="right"><h:outputLabel for="txtIdPedido" value="#{props['com.jr.props.menu.cat.pedidos_productos.id_pedido']} : "/></td>
        <td><p:inputText id="txtIdPedido" value="#{beanPedidosProductos.dominio.pedidos.idPedido}" required="true" 
        label="#{props['com.jr.props.menu.cat.pedidos_productos.id_pedido']}" requiredMessage="#{props['com.jr.field']} '#{props['com.jr.props.menu.cat.pedidos_productos.id_pedido']}' #{props['com.jr.is.required']}"
        disabled="#{beanPedidosProductos.dominio.disabled}"/></td>
        <td><p:message for="txtIdPedido" display="icon"/></td></tr>
        <tr><td align="right"><h:outputLabel for="txtIdProducto" value="#{props['com.jr.props.menu.cat.pedidos_productos.id_producto']} : "/></td>
        <td><p:inputText id="txtIdProducto" value="#{beanPedidosProductos.dominio.productos.idProducto}" required="true" 
        label="#{props['com.jr.props.menu.cat.pedidos_productos.id_producto']}" requiredMessage="#{props['com.jr.field']} '#{props['com.jr.props.menu.cat.pedidos_productos.id_producto']}' #{props['com.jr.is.required']}"
        disabled="#{beanPedidosProductos.dominio.disabled}"/></td>
        <td><p:message for="txtIdProducto" display="icon"/></td></tr>

        <tr>
            <td align="right">
                <p:commandButton id="btnCancelar" value="#{props['com.jr.props.btn.cancelar']}"
                                 update=":formTablePedidosProductos:tablaPedidosProductos"
                                 immediate="true"
                                 onclick="widgetPedidosProductos.hide();"/>
            </td>
            <td align="center">
                <p:commandButton id="btnAceptar"
                update="panelPedidosProductos :formTablePedidosProductos:messages :formTablePedidosProductos:tablaPedidosProductos"
                actionListener="#{beanPedidosProductos.save}" 
                value="#{props['com.jr.props.btn.aceptar']}" 
                oncomplete="widgetTablaPedidosProductos.unselectAllRows();
                validateData(args);"
                rendered="#{beanPedidosProductos.showSave}"/>
                <p:commandButton id="btnActualizar"
                update="panelPedidosProductos :formTablePedidosProductos:messages :formTablePedidosProductos:tablaPedidosProductos"
                actionListener="#{beanPedidosProductos.updateRow}" 
                value="#{props['com.jr.props.btn.aceptar']}" 
                oncomplete="widgetTablaPedidosProductos.unselectAllRows();
                validateData(args);"
                rendered="#{beanPedidosProductos.showUpdate}"/>
            </td>
        </tr>
    </table>
    </p:panel>
    </p:dialog>
    </h:form>
        
    <h:form id="formShowPedidosProductos">
    <p:dialog id="dialogShowPedidosProductos" header="#{beanPedidosProductos.tituloPantalla}" widgetVar="widgetShowPedidosProductos"
              showEffect="explode" hideEffect="fade"
              closable="false" modal="true" appendToBody="true">
    <p:panel>
    <fieldset>
    <table>
        <tr><td align="right"><h:outputLabel value="#{props['com.jr.props.menu.cat.pedidos_productos.id_pedido']} : "/></td>
            <td><h:outputText value="#{beanPedidosProductos.dominio.pedidos.idPedido}"/></td></tr>
        <tr><td align="right"><h:outputLabel value="#{props['com.jr.props.menu.cat.pedidos_productos.id_producto']} : "/></td>
            <td><h:outputText value="#{beanPedidosProductos.dominio.productos.idProducto}"/></td></tr>

    </table>
    </fieldset>
    <fieldset>
    <table width="100%" align="center">
        <tr>
            <td align="center" colspan="2">
                <p:commandButton id="btnOkShow" value="#{props['com.jr.props.btn.aceptar']}"
                                 update=":formTablePedidosProductos:tablaPedidosProductos"
                                 onclick="widgetShowPedidosProductos.hide();"/>
            </td>
        </tr>
    </table>
    </fieldset>
    </p:panel>
    </p:dialog>
    </h:form>
        
    <p:confirmDialog id="confirmarDelete" showEffect="fade" hideEffect="clip" appendToBody="true"
                message="¿#{props['com.jr.props.titulo.confirm.delete']}?"
                header="#{props['com.jr.props.registro.delete']}" severity="alert" widgetVar="confirmDeletePedidosProductos">
        <h:form id="formConfirmDelete">
        <center>
        <p:commandButton id="btnBorrarSI" value="#{props['com.jr.props.btn.si']}" styleClass="ui-confirmdialog-yes" icon="ui-icon-check"
                        actionListener="#{beanPedidosProductos.delete}" 
                        update=":formTablePedidosProductos:tablaPedidosProductos :formTablePedidosProductos:messages"
                        oncomplete="checkUn(); validateDelete(args);"/>
        <h:inputHidden id="idPedidosProductosDelete" value="#{beanPedidosProductos.dominio.idPedidoProducto}"/>
        <h:inputHidden id="contadorPedidosProductosDelete" value="#{beanPedidosProductos.dominio.cont}"/>
        <p:commandButton id="btnBorrarNO" value="#{props['com.jr.props.btn.no']}" type="button" styleClass="ui-confirmdialog-no" icon="ui-icon-close"
                        onclick="confirmDeletePedidosProductos.hide();"/>
        </center>
        </h:form>
    </p:confirmDialog>
        
    <script type="text/javascript">
    function checkUn() {
        var obj = document.getElementById("formTablePedidosProductos:tablaPedidosProductos:chSelectAll");
        obj.checked = false;
    }   
    
    function setIdActualizar(cont) {
        document.getElementById("formAAShowPedidosProductos:contadorPedidosProductosActualizar").value = cont;
    }
    
    function setIdDelete(id, cont) {
        document.getElementById("formConfirmDelete:idPedidosProductosDelete").value = id;
        document.getElementById("formConfirmDelete:contadorPedidosProductosDelete").value = cont;
    }
    
    function validateDelete(args) {
        if(args.statusTransaction == false) {
            alert(args.errorTransaction);
        } else {
            confirmDeletePedidosProductos.hide();
        }
    }
    
    function confirmaBorradoAll() {
        var obj = document.getElementById("formTablePedidosProductos:tablaPedidosProductos:chSelectAll");
        var elementos = document.getElementsByTagName("input");
        var cont = 0;
        var type = elementos[0].type;
        var checado = false;
        while(type != null) {
            try {
                var element = elementos[cont++];
                type = element.type;
                if(type == "checkbox") {
                    if(obj.id != element.id) {
                        if(element.checked) {
                            checado = true;
                            break;
                        }
                    }
                }
            } catch(e) {
                type = null;
            }
        }
        if(checado) {
            var response = confirm("¿#{props['com.jr.props.titulo.confirm.delete']}?");
            if(response) {
                obj.checked = false;
                checkUn();
            }
            return response;
        } else {
            alert("#{props['com.jr.props.msg.registro.deleteAll.vacio']}");
            return false;
        }
        return false;
    }
    
    function deleteAllMsg(args) {
        alert(args.errorTransaction);
    }
    
    function validateData(args) {
        if(args.validationFailed) {
            alert("#{props['com.jr.props.titulo.verifica.datos']}");
        } else if(args.statusTransaction == false) {
            alert(args.errorTransaction);
        } else {
            widgetPedidosProductos.hide();
        }
    }
    
    function selectUnAll(obj) {
        var elementos = document.getElementsByTagName("input");
        var cont = 0;
        var type = elementos[0].type;
        while(type != null) {
            try {
                var element = elementos[cont++];
                type = element.type;
                if(type == "checkbox") {
                     element.checked = obj.checked;
                }
            } catch(e) {
                type = null;
            }
        }
    }
    </script>
    </ui:define>
</ui:composition>
